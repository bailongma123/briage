<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ande.bridge.admin.dao.BridgeEconomicMapper">
	<resultMap id="BaseResultMap"
		type="com.ande.bridge.admin.model.BridgeEconomicEntity">

		<id column="bridge_id" property="bridgeId" jdbcType="INTEGER" />
		<result column="bridge_status" property="bridgeStatus"
			jdbcType="VARCHAR" />
		<result column="bridge_code" property="bridgeCode" jdbcType="VARCHAR" />
		<result column="bridge_construction_period" property="bridgeConstructionPeriod"
			jdbcType="INTEGER" />
		<result column="bridge_cost" property="bridgeCost" jdbcType="REAL" />
		<result column="bridge_deck_elevation" property="bridgeDeckElevation"
			jdbcType="REAL" />
		<result column="designed_flood_frequency" property="designedFloodFrequency"
			jdbcType="VARCHAR" />
		<result column="designed_scour_elevation" property="designedScourElevation"
			jdbcType="REAL" />
		<result column="bridge_base_elevation" property="bridgeBaseElevation"
			jdbcType="REAL" />
		<result column="history_flood_elevation" property="historyFloodElevation"
			jdbcType="REAL" />
		<result column="avg_traffic" property="avgTraffic" jdbcType="VARCHAR" />
		<result column="bridge_protect_project" property="bridgeProtectProject"
			jdbcType="VARCHAR" />
		<result column="bridge_against_type" property="bridgeAgainstType"
			jdbcType="VARCHAR" />
		<result column="bridge_geology" property="bridgeGeology"
			jdbcType="VARCHAR" />
		<result column="bridge_antiknock" property="bridgeAntiknock"
			jdbcType="VARCHAR" />
		<result column="bridge_auxiliary" property="bridgeAuxiliary"
			jdbcType="VARCHAR" />
		<result column="bridge_separator" property="bridgeSeparator"
			jdbcType="VARCHAR" />
		<result column="bridge_charge" property="bridgeCharge"
			jdbcType="VARCHAR" />
		<result column="designed_speed" property="designedSpeed"
			jdbcType="INTEGER" />
		<result column="bridge_coordinate" property="bridgeCoordinate"
			jdbcType="INTEGER" />
		<result column="bridge_environment" property="bridgeEnvironment"
			jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">

		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->

		bridge_id, bridge_status,
		bridge_code, bridge_construction_period,
		bridge_cost,
		bridge_deck_elevation,
		designed_flood_frequency,
		designed_scour_elevation, bridge_base_elevation,
		history_flood_elevation,
		avg_traffic, bridge_protect_project,
		bridge_against_type, bridge_geology,
		bridge_antiknock,
		bridge_auxiliary, bridge_separator, bridge_charge, designed_speed,
		bridge_coordinate,
		bridge_environment
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->

		select
		<include refid="Base_Column_List" />
		from t_bridge_economic
		where bridge_id = #{bridgeId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->

		delete from t_bridge_economic
		where bridge_id =
		#{bridgeId,jdbcType=INTEGER}
	</delete>

	<insert id="insertListEntity" parameterType="java.util.List" useGeneratedKeys="true">
		insert into t_bridge_economic (bridge_id, bridge_status, bridge_code,
		bridge_construction_period, bridge_cost, bridge_deck_elevation,
		designed_flood_frequency, designed_scour_elevation,
		bridge_base_elevation, history_flood_elevation, avg_traffic,
		bridge_protect_project, bridge_against_type,
		bridge_geology,
		bridge_antiknock, bridge_auxiliary,
		bridge_separator, bridge_charge,
		designed_speed,
		bridge_coordinate, bridge_environment)
		values
		<foreach collection="list" item="item" separator=",">
			(#{item.bridgeId,jdbcType=INTEGER},
			#{item.bridgeStatus,jdbcType=VARCHAR},
			#{item.bridgeCode,jdbcType=VARCHAR},
			#{item.bridgeConstructionPeriod,jdbcType=INTEGER},
			#{item.bridgeCost,jdbcType=REAL},
			#{item.bridgeDeckElevation,jdbcType=REAL},
			#{item.designedFloodFrequency,jdbcType=VARCHAR},
			#{item.designedScourElevation,jdbcType=REAL},
			#{item.bridgeBaseElevation,jdbcType=REAL},
			#{item.historyFloodElevation,jdbcType=REAL},
			#{item.avgTraffic,jdbcType=VARCHAR},
			#{item.bridgeProtectProject,jdbcType=VARCHAR},
			#{item.bridgeAgainstType,jdbcType=VARCHAR},
			#{item.bridgeGeology,jdbcType=VARCHAR},
			#{item.bridgeAntiknock,jdbcType=VARCHAR},
			#{item.bridgeAuxiliary,jdbcType=VARCHAR},
			#{item.bridgeSeparator,jdbcType=VARCHAR},
			#{item.bridgeCharge,jdbcType=VARCHAR},
			#{item.designedSpeed,jdbcType=INTEGER},
			#{item.bridgeCoordinate,jdbcType=INTEGER},
			#{item.bridgeEnvironment,jdbcType=VARCHAR})
		</foreach>
	</insert>

	<insert id="insert" parameterType="com.ande.bridge.admin.model.BridgeEconomicEntity">

		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->

		insert into t_bridge_economic (bridge_id, bridge_status,
		bridge_code,
		bridge_construction_period, bridge_cost,
		bridge_deck_elevation,
		designed_flood_frequency,
		designed_scour_elevation,
		bridge_base_elevation,
		history_flood_elevation, avg_traffic,
		bridge_protect_project,
		bridge_against_type,
		bridge_geology,
		bridge_antiknock,
		bridge_auxiliary,
		bridge_separator, bridge_charge,
		designed_speed,
		bridge_coordinate, bridge_environment)
		values
		(#{bridgeId,jdbcType=INTEGER}, #{bridgeStatus,jdbcType=VARCHAR},
		#{bridgeCode,jdbcType=VARCHAR},
		#{bridgeConstructionPeriod,jdbcType=INTEGER},
		#{bridgeCost,jdbcType=REAL}, #{bridgeDeckElevation,jdbcType=REAL},
		#{designedFloodFrequency,jdbcType=VARCHAR},
		#{designedScourElevation,jdbcType=REAL},
		#{bridgeBaseElevation,jdbcType=REAL},
		#{historyFloodElevation,jdbcType=REAL},
		#{avgTraffic,jdbcType=VARCHAR},
		#{bridgeProtectProject,jdbcType=VARCHAR},
		#{bridgeAgainstType,jdbcType=VARCHAR},
		#{bridgeGeology,jdbcType=VARCHAR},
		#{bridgeAntiknock,jdbcType=VARCHAR},
		#{bridgeAuxiliary,jdbcType=VARCHAR},
		#{bridgeSeparator,jdbcType=VARCHAR}, #{bridgeCharge,jdbcType=VARCHAR},
		#{designedSpeed,jdbcType=INTEGER},
		#{bridgeCoordinate,jdbcType=INTEGER},
		#{bridgeEnvironment,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.ande.bridge.admin.model.BridgeEconomicEntity">

		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->

		insert into t_bridge_economic
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="bridgeId != null">
				bridge_id,
			</if>
			<if test="bridgeStatus != null">
				bridge_status,
			</if>
			<if test="bridgeCode != null">
				bridge_code,
			</if>
			<if test="bridgeConstructionPeriod != null">
				bridge_construction_period,
			</if>
			<if test="bridgeCost != null">
				bridge_cost,
			</if>
			<if test="bridgeDeckElevation != null">
				bridge_deck_elevation,
			</if>
			<if test="designedFloodFrequency != null">
				designed_flood_frequency,
			</if>
			<if test="designedScourElevation != null">
				designed_scour_elevation,
			</if>
			<if test="bridgeBaseElevation != null">
				bridge_base_elevation,
			</if>
			<if test="historyFloodElevation != null">
				history_flood_elevation,
			</if>
			<if test="avgTraffic != null">
				avg_traffic,
			</if>
			<if test="bridgeProtectProject != null">
				bridge_protect_project,
			</if>
			<if test="bridgeAgainstType != null">
				bridge_against_type,
			</if>
			<if test="bridgeGeology != null">
				bridge_geology,
			</if>
			<if test="bridgeAntiknock != null">
				bridge_antiknock,
			</if>
			<if test="bridgeAuxiliary != null">
				bridge_auxiliary,
			</if>
			<if test="bridgeSeparator != null">
				bridge_separator,
			</if>
			<if test="bridgeCharge != null">
				bridge_charge,
			</if>
			<if test="designedSpeed != null">
				designed_speed,
			</if>
			<if test="bridgeCoordinate != null">
				bridge_coordinate,
			</if>
			<if test="bridgeEnvironment != null">
				bridge_environment,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="bridgeId != null">
				#{bridgeId,jdbcType=INTEGER},
			</if>
			<if test="bridgeStatus != null">
				#{bridgeStatus,jdbcType=VARCHAR},
			</if>
			<if test="bridgeCode != null">
				#{bridgeCode,jdbcType=VARCHAR},
			</if>
			<if test="bridgeConstructionPeriod != null">
				#{bridgeConstructionPeriod,jdbcType=INTEGER},
			</if>
			<if test="bridgeCost != null">
				#{bridgeCost,jdbcType=REAL},
			</if>
			<if test="bridgeDeckElevation != null">
				#{bridgeDeckElevation,jdbcType=REAL},
			</if>
			<if test="designedFloodFrequency != null">
				#{designedFloodFrequency,jdbcType=VARCHAR},
			</if>
			<if test="designedScourElevation != null">
				#{designedScourElevation,jdbcType=REAL},
			</if>
			<if test="bridgeBaseElevation != null">
				#{bridgeBaseElevation,jdbcType=REAL},
			</if>
			<if test="historyFloodElevation != null">
				#{historyFloodElevation,jdbcType=REAL},
			</if>
			<if test="avgTraffic != null">
				#{avgTraffic,jdbcType=VARCHAR},
			</if>
			<if test="bridgeProtectProject != null">
				#{bridgeProtectProject,jdbcType=VARCHAR},
			</if>
			<if test="bridgeAgainstType != null">
				#{bridgeAgainstType,jdbcType=VARCHAR},
			</if>
			<if test="bridgeGeology != null">
				#{bridgeGeology,jdbcType=VARCHAR},
			</if>
			<if test="bridgeAntiknock != null">
				#{bridgeAntiknock,jdbcType=VARCHAR},
			</if>
			<if test="bridgeAuxiliary != null">
				#{bridgeAuxiliary,jdbcType=VARCHAR},
			</if>
			<if test="bridgeSeparator != null">
				#{bridgeSeparator,jdbcType=VARCHAR},
			</if>
			<if test="bridgeCharge != null">
				#{bridgeCharge,jdbcType=VARCHAR},
			</if>
			<if test="designedSpeed != null">
				#{designedSpeed,jdbcType=INTEGER},
			</if>
			<if test="bridgeCoordinate != null">
				#{bridgeCoordinate,jdbcType=INTEGER},
			</if>
			<if test="bridgeEnvironment != null">
				#{bridgeEnvironment,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.ande.bridge.admin.model.BridgeEconomicEntity">

		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->

		update t_bridge_economic
		<set>
			<if test="bridgeStatus != null">
				bridge_status = #{bridgeStatus,jdbcType=VARCHAR},
			</if>
			<if test="bridgeCode != null">
				bridge_code = #{bridgeCode,jdbcType=VARCHAR},
			</if>
			<if test="bridgeConstructionPeriod != null">
				bridge_construction_period =
				#{bridgeConstructionPeriod,jdbcType=INTEGER},
			</if>
			<if test="bridgeCost != null">
				bridge_cost = #{bridgeCost,jdbcType=REAL},
			</if>
			<if test="bridgeDeckElevation != null">
				bridge_deck_elevation =
				#{bridgeDeckElevation,jdbcType=REAL},
			</if>
			<if test="designedFloodFrequency != null">
				designed_flood_frequency =
				#{designedFloodFrequency,jdbcType=VARCHAR},
			</if>
			<if test="designedScourElevation != null">
				designed_scour_elevation =
				#{designedScourElevation,jdbcType=REAL},
			</if>
			<if test="bridgeBaseElevation != null">
				bridge_base_elevation =
				#{bridgeBaseElevation,jdbcType=REAL},
			</if>
			<if test="historyFloodElevation != null">
				history_flood_elevation =
				#{historyFloodElevation,jdbcType=REAL},
			</if>
			<if test="avgTraffic != null">
				avg_traffic = #{avgTraffic,jdbcType=VARCHAR},
			</if>
			<if test="bridgeProtectProject != null">
				bridge_protect_project =
				#{bridgeProtectProject,jdbcType=VARCHAR},
			</if>
			<if test="bridgeAgainstType != null">
				bridge_against_type =
				#{bridgeAgainstType,jdbcType=VARCHAR},
			</if>
			<if test="bridgeGeology != null">
				bridge_geology = #{bridgeGeology,jdbcType=VARCHAR},
			</if>
			<if test="bridgeAntiknock != null">
				bridge_antiknock = #{bridgeAntiknock,jdbcType=VARCHAR},
			</if>
			<if test="bridgeAuxiliary != null">
				bridge_auxiliary = #{bridgeAuxiliary,jdbcType=VARCHAR},
			</if>
			<if test="bridgeSeparator != null">
				bridge_separator = #{bridgeSeparator,jdbcType=VARCHAR},
			</if>
			<if test="bridgeCharge != null">
				bridge_charge = #{bridgeCharge,jdbcType=VARCHAR},
			</if>
			<if test="designedSpeed != null">
				designed_speed = #{designedSpeed,jdbcType=INTEGER},
			</if>
			<if test="bridgeCoordinate != null">
				bridge_coordinate = #{bridgeCoordinate,jdbcType=INTEGER},
			</if>
			<if test="bridgeEnvironment != null">
				bridge_environment =
				#{bridgeEnvironment,jdbcType=VARCHAR},
			</if>
		</set>
		where bridge_id = #{bridgeId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ande.bridge.admin.model.BridgeEconomicEntity">

		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->

		update t_bridge_economic
		set bridge_status =
		#{bridgeStatus,jdbcType=VARCHAR},
		bridge_code =
		#{bridgeCode,jdbcType=VARCHAR},
		bridge_construction_period =
		#{bridgeConstructionPeriod,jdbcType=INTEGER},
		bridge_cost =
		#{bridgeCost,jdbcType=REAL},
		bridge_deck_elevation =
		#{bridgeDeckElevation,jdbcType=REAL},
		designed_flood_frequency =
		#{designedFloodFrequency,jdbcType=VARCHAR},
		designed_scour_elevation =
		#{designedScourElevation,jdbcType=REAL},
		bridge_base_elevation =
		#{bridgeBaseElevation,jdbcType=REAL},
		history_flood_elevation =
		#{historyFloodElevation,jdbcType=REAL},
		avg_traffic =
		#{avgTraffic,jdbcType=VARCHAR},
		bridge_protect_project =
		#{bridgeProtectProject,jdbcType=VARCHAR},
		bridge_against_type =
		#{bridgeAgainstType,jdbcType=VARCHAR},
		bridge_geology =
		#{bridgeGeology,jdbcType=VARCHAR},
		bridge_antiknock =
		#{bridgeAntiknock,jdbcType=VARCHAR},
		bridge_auxiliary =
		#{bridgeAuxiliary,jdbcType=VARCHAR},
		bridge_separator =
		#{bridgeSeparator,jdbcType=VARCHAR},
		bridge_charge =
		#{bridgeCharge,jdbcType=VARCHAR},
		designed_speed =
		#{designedSpeed,jdbcType=INTEGER},
		bridge_coordinate =
		#{bridgeCoordinate,jdbcType=INTEGER},
		bridge_environment =
		#{bridgeEnvironment,jdbcType=VARCHAR}
		where bridge_id =
		#{bridgeId,jdbcType=INTEGER}
	</update>
</mapper>