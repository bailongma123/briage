gg-------------------------------------------------------------------------------------------------------------------
版本:v1.0 2018-05-28
1 项目结构 
---------------------分支----------------
master
chengzb
pengshu
当前开发在chengzb分支下,pengshu分支是开发桥梁基本信息的后台管理系统
chengzb已经merge 到master,
----工程名称----------------------------------------------工程描述----------打包类型
-----------------------------------------------------------------------------------
---bridge------------------------------------------父项目------------pom
------bridge-common-------------------------------工具类------------jar
------bridge-common-dao------------------------------------------关系型数据库访问层支持模块---------war
------bridge-hbase----------------------------------------hbase访问层------jar
------bridge-kafka----------------------------------------kafka访问层------jar
------bridge-pool----------------------------------------池技术层------jar
------bridge-web----------------------------------------对外接入层------jar
------bridge-middle----------------------------------------中间层(连接kafka和hbase做数据入库)------jar
------------------------------------------------------------------------------------
2 项目描述
	该项目是做桥梁大数据的,一期主要目标是实现数据从传感器层传入服务端,数据存储采用hbase,
3 系统结构说明
 3.1 bridge-web
  	3.1.1 数据接入层
  		com.ande.bridge.web.controller.DataAccessController 这个类是数据接入接口
  	3.1.2  数据模型
	  	包:com.ande.bridge.web.model
	  	类:Data 这个是数据模型的基类,定义传感器接入系统所需的必须基本参数
	  	类:DataAcceleration 这是加速度传感器的数据模型,继承Data基类
  	3.1.3  工厂模型
	  	包:com.ande.bridge.web.factory
	  	类:DataBeanFactory 传感器数据模型工厂类,扩展新的传感器数据模型时需要在这个工厂类里新增新的数据模型的创建
  	3.1.4 传感器数据模型枚举类
  		包:com.ande.bridge.web.model
  		类:Sensor 数据模型枚举 ,扩展新的传感器数据模型时需要在这个枚举类里新增类型
 3.2 bridge-kafka
 	数据缓冲层,考虑上下游系统接入速率的问题,故此引入这个buffer
 3.3 bridge-middle
 	从kafka消费数据,然后数据入hbase
4 线上部署结构
 4.1 hadoop集群
	Master(xx.xx.250)	Slave1(xx.xxx.67)	Slave2(xx.xx.18)
	NameNode				ResourceManage	 
	DataNode				DataNode					DataNode
	NodeManager				NodeManager					NodeManager
	 													SecondaryNameNode
4.2 zookeeper集群
   	Master(xx.xx.250)	Slave1(xx.xxx.67)	Slave2(xx.xx.18) 
   	三台机器都部署了,1个leader,2个slave(leader由zookeeper集群选举)
4.3 habase 集群
	HMaster(xx.xx.250)	HRegionServer(xx.xxx.67) HRegionServer(xx.xx.18)
4.4 kafka集群
	(xx.xx.250),(xx.xxx.67),(xx.xx.18)
	partition的leader 由kafka 自行维护
--------------------------------------------------------------------------------------------------------------------
版本:v1.1 2018-06-21	
1 项目结构调整
	1.1 bridge-web 下移除工厂模型
	1.2 数据接入层 data数据模型 改成map接收，以做到模型通用
	1.3 新增bridge-platform 第三方开发者接入平台
	1.4 从pengshu分支 merge进来的briage-admin项目,做数据后台管理系统
2 项目优化
   2.1 bridge-kafka 自定义kafka partition的策略,让broker能够做到负载均衡，customer 对应不同分区，提高消费者吞吐量
   2.2 bridge-hbase 优化hbase row key 设计,让Hregion 能够负载均衡，提高hbase处理能力
   2.3 brige-platform 为了token生成时数据一致性,通过redis setnx原子命令 做分布式锁
